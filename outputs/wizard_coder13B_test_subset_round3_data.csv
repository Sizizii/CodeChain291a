,file,func,func_code
0,outputs/wizard_coder13B_test_subset_round3/4333.json," 
def restore_square_vertices(x1, y1, x2, y2):
    if x1 == x2 and y1 == y2:
        return -1, -1, -1, -1

    x3 = x1 + (x2 - x1)
    y3 = y1 + (y2 - y1)
    x4 = x1 - (y2 - y1)
    y4 = y1 + (x2 - x1)
    return x3, y3, x4, y4
","def restore_square_vertices(x1, y1, x2, y2):
    if x1 == x2 and y1 == y2:
        return -1, -1, -1, -1

    x3 = x1 + (x2 - x1)
    y3 = y1 + (y2 - y1)
    x4 = x1 - (y2 - y1)
    y4 = y1 + (x2 - x1)
    return x3, y3, x4, y4"
1,outputs/wizard_coder13B_test_subset_round3/4704.json,"
def min_difference(cards):
    """"""
    Description: This function finds the minimum difference between the sum of cards taken by Snuke and Raccoon.
    Input:
    cards (list): A list of integers representing the cards in the heap.
    Output:
    diff (int): The minimum difference between the sum of cards taken by Snuke and Raccoon.
    """"""
","def min_difference(cards):
    total_cards = sum(cards)
    min_diff = float('inf')
    for i in range(1, len(cards) + 1):
        snuke_sum = sum(cards[:i])
        raccoon_sum = total_cards - snuke_sum
        diff = abs(snuke_sum - raccoon_sum)
        min_diff = min(min_diff, diff)
    return min_diff"
